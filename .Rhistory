exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
# Load required packages
library(VGAM)
library(tidyverse)
library(hnp)
library(betareg)
library(Stat2Data)
library(usmap)
library(PNWColors)
library(car)
library(ggthemes)
library(MASS)
library(reshape2)
library(reshape)
library(maxLik)
library(here)
# Load custom functions (order matters for dependencies)
source(here("USA_election", "R", "funcoesWeibullT.R"))
source(here("USA_election", "R", "WeibullT_Regression.R"))
source(here("USA_election", "R", "comp.models.R"))
source(here("USA_election", "R", "graficoWT.R"))
# Load example dataset
data(Election16)
data(statepop) # Used for usmap visualizations
# The dataset Election16, used in the analysis, has been updated.
Election16$Dem.Rep <- c(
-17.3,-17.2,-1.4,-6.9, 15.5,-1.4,10.5, 5.8, 0.7,-3.9,
20.8,-30, 10.8,-6, -3.3,-13.1,-2.8,-1.6,-3.7, 15,
18.6, 4, 0.5,-5.2,-7.9, -14.4,-8.7,-4.1,-8.8,10.2,
11.6, 18.4, 0.2,-20.8, 0.2,-13.4,5.8, 3, 19.4,-12.5,
-15.8,-10.3,-5.5,-29.9, 21.7, -1.6,9.1,-6.1,-0.7,-31.8)
# Check updates
head(Election16$Dem.Rep)
head(Election16)
# Attach data for simplified variable access
attach(Election16)
statepop2 <- statepop |>
filter(abbr != "DC")# remove the "District of Columbia"
eleicoes <- dplyr::right_join(statepop2, Election16, by = c("abbr" = "Abr")) |>
mutate(DDR = Dem.Rep / 100) |>                            # scaling the response variable
mutate(TrumpWin = as.factor(TrumpWin)) |>                 # converting binary variable to a factor
mutate(Status = ifelse(TrumpWin == "1", "Won", "Lost"),
.after = "TrumpWin") |>                            # creates a status for Plot 2
mutate(statusDDR = ifelse(DDR > "0", "Won", "Lost")) # classification based on DDR
TRUMP16
names(eleicoes)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
# Load required packages
library(VGAM)
library(tidyverse)
library(hnp)
library(betareg)
library(Stat2Data)
library(usmap)
library(PNWColors)
library(car)
library(MASS)
library(reshape2)
library(ggthemes)
library(here)
library(maxLik)
library(reshape)
# Load custom functions (order matters for dependencies)
source(here("USA_election", "R", "funcoesWeibullT.R"))
source(here("USA_election", "R", "WeibullT_Regression.R"))
source(here("USA_election", "R", "comp.models.R"))
source(here("USA_election", "R", "graficoWT.R"))
# Load example dataset
data(Election16)
data(statepop) # Used for usmap visualizations
# Attach data for simplified variable access
attach(Election16)
head(Election16)
# Check updates
head(Election16$Dem.Rep)
# The dataset Election16, used in the analysis, has been updated.
Election16$Dem.Rep <- c(
-17.3,-17.2,-1.4,-6.9, 15.5,-1.4,10.5, 5.8, 0.7,-3.9,
20.8,-30, 10.8,-6, -3.3,-13.1,-2.8,-1.6,-3.7, 15,
18.6, 4, 0.5,-5.2,-7.9, -14.4,-8.7,-4.1,-8.8,10.2,
11.6, 18.4, 0.2,-20.8, 0.2,-13.4,5.8, 3, 19.4,-12.5,
-15.8,-10.3,-5.5,-29.9, 21.7, -1.6,9.1,-6.1,-0.7,-31.8)
statepop2 <- statepop |>
filter(abbr != "DC")# remove the "District of Columbia"
statepop2
eleicoes <- dplyr::right_join(statepop2, Election16, by = c("abbr" = "Abr")) |>
mutate(DDR = Dem.Rep / 100) |>                            # scaling the response variable
mutate(TrumpWin = as.factor(TrumpWin)) |>                 # converting binary variable to a factor
mutate(Status = ifelse(TrumpWin == "1", "Won", "Lost"),
.after = "TrumpWin") |>                            # creates a status for Plot 2
mutate(statusDDR = ifelse(DDR > "0", "Won", "Lost")) # classification based on DDR
eleicoes
names(eleicoes)
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
trump_win
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
grafDDR <- plot_usmap(data = eleicoes,
values = "DDR",
labels = TRUE,
exclude = c("DC")
) +
scale_fill_gradientn(colours = pnw_palette("Bay", n = 50, type = "continuous"),
name = "DDR",
limits = c(-0.35, 0.35)) +
theme(legend.position = "right",
panel.background = element_rect(colour = "black")) + ylab("") +
xlab("")
grafDDR
packageVersion("usmap")
library(VGAM)
library(tidyverse)
library(hnp)
library(betareg)
library(Stat2Data)
library(usmap)
library(PNWColors)
library(car)
library(ggthemes)
library(MASS)
library(reshape2)
library(reshape)
library(maxLik)
library(here)
# Load custom functions (order matters for dependencies)
source(here("USA_election", "R", "funcoesWeibullT.R"))
source(here("USA_election", "R", "WeibullT_Regression.R"))
source(here("USA_election", "R", "comp.models.R"))
source(here("USA_election", "R", "graficoWT.R"))
# Load example dataset
data(Election16)
data(statepop) # Used for usmap visualizations
# The dataset Election16, used in the analysis, has been updated.
Election16$Dem.Rep <- c(
-17.3,-17.2,-1.4,-6.9, 15.5,-1.4,10.5, 5.8, 0.7,-3.9,
20.8,-30, 10.8,-6, -3.3,-13.1,-2.8,-1.6,-3.7, 15,
18.6, 4, 0.5,-5.2,-7.9, -14.4,-8.7,-4.1,-8.8,10.2,
11.6, 18.4, 0.2,-20.8, 0.2,-13.4,5.8, 3, 19.4,-12.5,
-15.8,-10.3,-5.5,-29.9, 21.7, -1.6,9.1,-6.1,-0.7,-31.8)
# Check updates
head(Election16$Dem.Rep)
head(Election16)
# Attach data for simplified variable access
attach(Election16)
statepop2 <- statepop |>
filter(abbr != "DC")# remove the "District of Columbia"
eleicoes <- dplyr::right_join(statepop2, Election16, by = c("abbr" = "Abr")) |>
mutate(DDR = Dem.Rep / 100) |>                            # scaling the response variable
mutate(TrumpWin = as.factor(TrumpWin)) |>                 # converting binary variable to a factor
mutate(Status = ifelse(TrumpWin == "1", "Won", "Lost"),
.after = "TrumpWin") |>                            # creates a status for Plot 2
mutate(statusDDR = ifelse(DDR > "0", "Won", "Lost")) # classification based on DDR
names(eleicoes)
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
install.packages("usmapdata")
library(usmapdata)
# Load custom functions (order matters for dependencies)
source(here("USA_election", "R", "funcoesWeibullT.R"))
source(here("USA_election", "R", "WeibullT_Regression.R"))
source(here("USA_election", "R", "comp.models.R"))
source(here("USA_election", "R", "graficoWT.R"))
# Load example dataset
data(Election16)
data(statepop) # Used for usmap visualizations
# The dataset Election16, used in the analysis, has been updated.
Election16$Dem.Rep <- c(
-17.3,-17.2,-1.4,-6.9, 15.5,-1.4,10.5, 5.8, 0.7,-3.9,
20.8,-30, 10.8,-6, -3.3,-13.1,-2.8,-1.6,-3.7, 15,
18.6, 4, 0.5,-5.2,-7.9, -14.4,-8.7,-4.1,-8.8,10.2,
11.6, 18.4, 0.2,-20.8, 0.2,-13.4,5.8, 3, 19.4,-12.5,
-15.8,-10.3,-5.5,-29.9, 21.7, -1.6,9.1,-6.1,-0.7,-31.8)
# Check updates
head(Election16$Dem.Rep)
head(Election16)
# Attach data for simplified variable access
attach(Election16)
statepop2 <- statepop |>
filter(abbr != "DC")# remove the "District of Columbia"
eleicoes <- dplyr::right_join(statepop2, Election16, by = c("abbr" = "Abr")) |>
mutate(DDR = Dem.Rep / 100) |>                            # scaling the response variable
mutate(TrumpWin = as.factor(TrumpWin)) |>                 # converting binary variable to a factor
mutate(Status = ifelse(TrumpWin == "1", "Won", "Lost"),
.after = "TrumpWin") |>                            # creates a status for Plot 2
mutate(statusDDR = ifelse(DDR > "0", "Won", "Lost")) # classification based on DDR
names(eleicoes)
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
TRUMP16
grafDDR <- plot_usmap(data = eleicoes,
values = "DDR",
labels = TRUE,
exclude = c("DC")
) +
scale_fill_gradientn(colours = pnw_palette("Bay", n = 50, type = "continuous"),
name = "DDR",
limits = c(-0.35, 0.35)) +
theme(legend.position = "right",
panel.background = element_rect(colour = "black")) + ylab("") +
xlab("")
grafDDR
# Load required packages
library(VGAM)
library(tidyverse)
library(hnp)
library(betareg)
library(Stat2Data)
library(usmap)
library(PNWColors)
library(car)
library(ggthemes)
library(MASS)
library(reshape2)
library(reshape)
library(maxLik)
library(here)
library(usmapdata)
# Load custom functions (order matters for dependencies)
source(here("USA_election", "R", "funcoesWeibullT.R"))
source(here("USA_election", "R", "WeibullT_Regression.R"))
source(here("USA_election", "R", "comp.models.R"))
source(here("USA_election", "R", "graficoWT.R"))
# Load example dataset
data(Election16)
data(statepop) # Used for usmap visualizations
# The dataset Election16, used in the analysis, has been updated.
Election16$Dem.Rep <- c(
-17.3,-17.2,-1.4,-6.9, 15.5,-1.4,10.5, 5.8, 0.7,-3.9,
20.8,-30, 10.8,-6, -3.3,-13.1,-2.8,-1.6,-3.7, 15,
18.6, 4, 0.5,-5.2,-7.9, -14.4,-8.7,-4.1,-8.8,10.2,
11.6, 18.4, 0.2,-20.8, 0.2,-13.4,5.8, 3, 19.4,-12.5,
-15.8,-10.3,-5.5,-29.9, 21.7, -1.6,9.1,-6.1,-0.7,-31.8)
# Check updates
head(Election16$Dem.Rep)
head(Election16)
# Attach data for simplified variable access
attach(Election16)
statepop2 <- statepop |>
filter(abbr != "DC")# remove the "District of Columbia"
eleicoes <- dplyr::right_join(statepop2, Election16, by = c("abbr" = "Abr")) |>
mutate(DDR = Dem.Rep / 100) |>                            # scaling the response variable
mutate(TrumpWin = as.factor(TrumpWin)) |>                 # converting binary variable to a factor
mutate(Status = ifelse(TrumpWin == "1", "Won", "Lost"),
.after = "TrumpWin") |>                            # creates a status for Plot 2
mutate(statusDDR = ifelse(DDR > "0", "Won", "Lost")) # classification based on DDR
names(eleicoes)
trump_win <- eleicoes |>
mutate(state = str_trim(State, side = "right")) |>
dplyr::select(fips, abbr, full, Status)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
grafDDR <- plot_usmap(data = eleicoes,
values = "DDR",
labels = TRUE,
exclude = c("DC")
) +
scale_fill_gradientn(colours = pnw_palette("Bay", n = 50, type = "continuous"),
name = "DDR",
limits = c(-0.35, 0.35)) +
theme(legend.position = "right",
panel.background = element_rect(colour = "black")) + ylab("") +
xlab("")
grafDDR
ggsave("USA_election/figures/USmap_2016.png", width = 10, height = 7, dpi = 300)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
ggsave("USA_election/figures/Trump2016.png", width = 10, height = 7, dpi = 300)
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "black",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
TRUMP16 = usmap::plot_usmap(
data = trump_win,
values = "Status",
labels = T,
label_color = "white",
exclude = c("DC")
) +
scale_fill_manual(values = c("Won" = "darkred",
"Lost" = "darkblue"),
name = "Trump") +
theme(
legend.position = "right",
panel.background = element_rect(colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
labs(title = "") +
xlab("") +
ylab("")
TRUMP16
ggsave("USA_election/figures/Trump2016.png", width = 10, height = 7, dpi = 300)
